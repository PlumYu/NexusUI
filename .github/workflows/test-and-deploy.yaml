name: Test and deploy

on:
  push:
    branches:
      - master # 或者 'main'，根据你实际使用的分支

jobs:
  test:
    name: Run Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4 # 推荐更新到 v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 明确指定 Node.js 版本，如 '18' 或 '20'
          # cache: 'pnpm' # <--- 移除此行，避免与 pnpm/action-setup 冲突

      - name: Setup pnpm # 使用 pnpm 官方 action，设置指定版本
        uses: pnpm/action-setup@v3
        with:
          version: 8 # **这里保持为 8，与你本地 pnpm 版本一致**
          run_install: false # 不在此步骤自动运行 install

      - name: Cache pnpm modules # <--- 新增：手动添加 pnpm 模块缓存
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store # pnpm 默认的全局存储路径
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }} # 缓存键包含 lockfile 的哈希值
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: npm run test

  build:
    name: Build docs
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4 # 推荐更新到 v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20" # 明确指定 Node.js 版本
          # cache: 'pnpm' # <--- 移除此行

      - name: Setup pnpm # 同样应用于 build job
        uses: pnpm/action-setup@v3
        with:
          version: 8 # 保持为 8
          run_install: false

      - name: Cache pnpm modules # <--- 新增：手动添加 pnpm 模块缓存
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build docs
        run: npm run docs:build

      - name: Upload docs
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: ./packages/docs/.vitepress/dist

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download docs
        uses: actions/download-artifact@v3
        with:
          name: docs

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: .
